# This workflow will install Python dependencies, run tests and deploy the application to the Fly environment

name: Upload to Fly

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Poetry
      run: pip install poetry
    - name: Install dependencies
      run: poetry install
    - name: Setup chromedriver
      uses: nanasess/setup-chromedriver@master
    - name: Configure chromedriver
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
    - name: Initialize database
      run: |
        poetry run python3 src/init_db.py
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost/postgres
    - name: Run robot tests
      run: bash run_robot_tests.sh
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost/postgres
        FLASK_ENV: development
    - name: Export requirements.txt
      run: |
        poetry export --without-hashes --format=requirements.txt > requirements.txt
    - name: Set up flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master
    - name: Deploy to Fly
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
