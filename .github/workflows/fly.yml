# This workflow will install Python dependencies, run tests and deploy the application to the Fly environment

name: Upload coverage report and deploy to Fly

on:
  push:
    branches: [ "main" ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
  # Service containers to run with `runner-job`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            # Maps tcp port 5432 on service container to the host
            - 5432:5432



    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    - name: Install dependencies
      run: |
        poetry install
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@v1
    - name: Initialize database for tests
      run: |
        poetry run python3 src/init_db.py
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432
    - name: Run unit tests
      run: poetry run coverage run --branch -m pytest
    - name: Save coverage report
      run: poetry run coverage xml
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3.1.1
    - name: Start Flask server
      run: |
        poetry run nohup python3 src/index.py &
        sleep 3
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432
        FLASK_ENV: development
        SECRET_KEY: secretysecret:)
    - name: Run end-to-end tests
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        poetry run robot src
    - name: Export requirements.txt
      run: |
        poetry export --without-hashes --format=requirements.txt > requirements.txt
    - name: Set up flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master
    - name: Deploy to Fly
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
